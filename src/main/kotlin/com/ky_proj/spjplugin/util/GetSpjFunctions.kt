package com.ky_proj.spjplugin.util

/**
 * Created on 2018/01/19.
 */
class GetSpjFunctions private constructor() {

    val list: Array<String>
        get() =
            arrayOf(
                    "array.append()",
                    "array.compact()",
                    "array.contains()",
                    "array.copy()",
                    "array.count()",
                    "array.count_not_empty()",
                    "array.get()",
                    "array.get_index()",
                    "array.in()",
                    "array.insert()",
                    "array.is_array()",
                    "array.make()",
                    "array.pop()",
                    "array.random()",
                    "array.remove()",
                    "array.reverse()",
                    "array.sequence()",
                    "array.set()",
                    "array.shift()",
                    "array.sort()",
                    "array.union()",
                    "array.unique()",
                    "array2d.transpose()",
                    "age()",
                    "cgi()",
                    "chkdate()",
                    "chktime()",
                    "concat()",
                    "contains()",
                    "count_array()",
                    "date()",
                    "datetime()",
                    "day_of_the_week()",
                    "decode()",
                    "elementat()",
                    "encode()",
                    "exec()",
                    "exist_form_variable()",
                    "exist_session_variable()",
                    "format()",
                    "format_comma()",
                    "fs.exists()",
                    "fs.is_dir()",
                    "fs.is_file()",
                    "fs.last_modified()",
                    "fs.list_dirs()",
                    "fs.list_files()",
                    "fs.list()",
                    "fs.make_dir()",
                    "fs.rename()",
                    "fs.remove()",
                    "get_cookie()",
                    "get_error_message()",
                    "get_resource_str()",
                    "get_session_variable()",
                    "get_http_session_variable()",
                    "get_session_var_list()",
                    "get_variable()",
                    "http_header()",
                    "http_reqenv()",
                    "http.new_session()",
                    "http.set_status()",
                    "isalphabet()",
                    "isdecimal()",
                    "ishiragana()",
                    "iskatakana()",
                    "isletter()",
                    "isnumeric()",
                    "join_str()",
                    "json_escape()",
                    "length()",
                    "linefeed_tag()",
                    "lower()",
                    "lpad()",
                    "ltrim()",
                    "max()",
                    "min()",
                    "md5()",
                    "mkarray()",
                    "mkseq()",
                    "regex.match()",
                    "regex.replace()",
                    "regex.replace_all()",
                    "replace()",
                    "replace_marker()",
                    "roman_to_kana()",
                    "round()",
                    "rpad()",
                    "rtrim()",
                    "sanitize()",
                    "unsanitize()",
                    "select_multiple_list()",
                    "separate_str()",
                    "set_session_variable()",
                    "set_http_session_variable()",
                    "substr()",
                    "switch_case()",
                    "time()",
                    "trim()",
                    "trunc()",
                    "upper()",
                    "mail.close_inbox()",
                    "mail.close_pop3()",
                    "mail.close_smtp()",
                    "mail.delete_message()",
                    "mail.get_all_headers()",
                    "mail.get_attachment()",
                    "mail.get_attachment_contenttype()",
                    "mail.get_attachment_data()",
                    "mail.get_attachment_filename()",
                    "mail.get_content()",
                    "mail.get_content_type()",
                    "mail.get_from()",
                    "mail.get_header()",
                    "mail.get_message_count()",
                    "mail.get_message_size()",
                    "mail.get_recipient_cc()",
                    "mail.get_recipient_to()",
                    "mail.get_reply_to()",
                    "mail.get_sent_date()",
                    "mail.get_subject()",
                    "mail.is_valid_address()",
                    "mail.open_inbox()",
                    "mail.open_pop3()",
                    "mail.open_smtp()",
                    "mail.send_message()",
                    "mail.whois_reply_cc()",
                    "mail.whois_reply_to()",
                    "file.readtext()",
                    "file.readtext_array()",
                    "file.read_text_file()",
                    "file.read_binary_file()",
                    "sql.call()",
                    "sql.execute()",
                    "sql.execute_marked()",
                    "sql.execute_marked_hash()",
                    "sql.execute_prepared(db, \$sql, )",
                    "sql.execute_prepared_array(db, \$sql, )",
                    "sql.func()",
                    "sql.get_column_info_ora()",
                    "sql.get_col_length_ora()",
                    "sql.get_col_type_ora()",
                    "sql.get_error_code()",
                    "sql.get_message()",
                    "sql.get_primary_key_ora()",
                    "sql.get_state()",
                    "sql.get_table_comment_ora()",
                    "sql.query()",
                    "sql.query_marked()",
                    "sql.query_marked_hash()",
                    "sql.query_prepared(db, \$sql, 1, 0, )",
                    "sql.query_prepared_array(db, \$sql, 1, 0, )",
                    "sql.result_array()",
                    "sql.result_column_count()",
                    "sql.result_col_names()",
                    "sql.result_count()",
                    "sql.result_element()",
                    "sql.result_row()",
                    "sql.result_row_2d_array(\$rs, 1, 0, )",
                    "sql.result_row_hash(\$rs, 1, )",
                    "sql.result_row_array(\$rs, 1, 0, )",
                    "sql.result_row_array_hash(\$rs, 1, 0, )",
                    "sql.result_row_hash_array(\$rs, 1, 0, )",
                    "sql.result_row_pack()",
                    "sql.result_union()",
                    "pdf.to_unicode()",
                    "crypt.decoder()",
                    "crypt.encoder()",
                    "date.age()",
                    "date.chkdate()",
                    "date.chktime()",
                    "date.date()",
                    "date.datetime()",
                    "date.date_cal()",
                    "date.day_of_the_week()",
                    "date.days_of_weeks()",
                    "date.days()",
                    "date.last_day()",
                    "date.mkjpholidays()",
                    "date.net_workdays()",
                    "date.next_day()",
                    "date.time()",
                    "date.workdate()",
                    "mail.ClosePop3()",
                    "mail.OpenPop3()",
                    "csv.generate()",
                    "csv.generate_file()",
                    "csv.parse()",
                    "csv.parse_file()",
                    "json.generate()",
                    "json.generate_file()",
                    "json.parse()",
                    "json.parse_file()",
                    "hash.contains_key(hash, \$key)",
                    "hash.copy()",
                    "hash.count()",
                    "hash.get(hash, \$key)",
                    "hash.is_hash()",
                    "hash.keys()",
                    "hash.make()",
                    "hash.merge()",
                    "hash.put(hash, \$key, \$value)",
                    "hash.remove(hash, \$key)")
    companion object {
        internal val instance = GetSpjFunctions()
    }
}
